version: "3"

services:
  postgres:
    image: postgres
    env_file:
      - ./.env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  redis:
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - backend

  reverse-proxy:
    image: reverse-proxy
    build: ./reverse-proxy
    ports:
      - 8085:80
    depends_on:
      - client
      - master-server
      - auth-server
    logging:
       driver: none
    restart: unless-stopped
    volumes:
      - ./reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./reverse-proxy/backend-not-found.html:/var/www/html/backend-not-found.html
      - ./reverse-proxy/includes/:/etc/nginx/includes/
      - ./reverse-proxy/ssl/:/etc/ssl/certs/nginx/
    networks:
      - frontend
      - backend

  postgres-admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - 8086:80
    environment:
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_DEFAULT_EMAIL: "test@test.com"
    logging:
      driver: none
    restart: unless-stopped
    networks:
      - frontend
      - backend

  master-server:
    image: master-server
    build: ./servers/master-server/
    env_file:
      - ./.env
    ports:
      - 8081:80
    depends_on:
      - postgres
      - redis
      - auth-server
    restart: unless-stopped
    volumes:
      - ./servers/master-server/:/var/app/
    networks:
      - backend
      - third-party

  auth-server:
    image: auth-server
    build: ./servers/auth-server
    env_file:
      - ./.env
    ports:
      - 8082:80
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - ./servers/auth-server/:/var/app/
    networks:
      - backend

  client:
    image: client-app
    build: ./client
    ports:
      - 8084:3000
    depends_on:
      - auth-server
      - master-server
    restart: unless-stopped
    volumes:
      - ./client/:/var/app/
    networks:
      - backend

volumes:
  postgres_data: null

networks:
  frontend:
    internal: false
  backend:
    internal: true
  third-party:
      internal: false
